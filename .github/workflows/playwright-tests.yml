name: Playwright Tests with Allure Report

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --configuration Release --no-restore

      - name: Install Playwright browsers
        working-directory: Playwright.Tests
        run: |
          dotnet build --configuration Release
          pwsh bin/Release/net9.0/playwright.ps1 install --with-deps

      - name: Run Playwright tests
        env:
          ORANGEHRM_URL: ${{ secrets.ORANGEHRM_URL }}
          ORANGEHRM_USER: ${{ secrets.ORANGEHRM_USER }}
          ORANGEHRM_PASSWORD: ${{ secrets.ORANGEHRM_PASSWORD }}
        run: dotnet test Playwright.Tests/Playwright.Tests.csproj --configuration Release --no-build --settings prod.runsettings

      - name: Install Allure commandline
        run: |
          wget https://github.com/allure-framework/allure2/releases/download/2.29.0/allure-2.29.0.tgz -O allure.tgz
          tar -zxvf allure.tgz
          sudo mv allure-2.29.0 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure
      
      - name: Verify Allure installation
        run: allure --version

      - name: Generate Allure HTML report
        run: |
          allure generate --clean \
            -o AllureReport \
            Playwright.Tests/bin/Release/net9.0/allure-results

      - name: Upload Allure report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: Playwright.Tests/bin/Release/net9.0/allure-report

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Allure artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: AllureReport

      - name: Prepare report folder
        run: |
          timestamp=$(date +"%Y-%m-%d_%H-%M-%S")
          mkdir -p site/reports/$timestamp
          cp -r AllureReport/* site/reports/$timestamp/
          rm -rf site/latest
          cp -r AllureReport site/latest
          echo "REPORT_URL=https://vokut.github.io/PlaywrightSolution/reports/$timestamp/" >> $GITHUB_ENV

      - name: Deploy all reports to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site

      - name: Add report link to summary
        if: always()
        run: |
          echo "✅ [View This Run’s Allure Report]($REPORT_URL)" >> $GITHUB_STEP_SUMMARY